import { expect } from "chai";
import hre from "hardhat";

const vk = [
  "6763126530687886999315782887200758703366235230289874831627658839515656330867",
  "12297948670392550312636836114470404429657568989657927437959695771502446445179",
  "3804423004921008809819632629079723167970572551072432396497601916259815496626",
  "15362786867599176251482538547160991918100063526460909721657878971551583339657",
  "2076817281717432063622727433912740683541778328445173073030513609350245776784",
  "21885719103633717693283841528133243510750001708857084897139570082577218850374",
  "21131173266568468249589649137903719095480044620502529067534622738225157042304",
  "1505558511994093266228972967760414664043255115544025409518939393775943607863",
  "18835856718271757625037377080288624550370480296914695806777038708085497610013",
  "4008759115482693545406793535591568078300615151288108694080317738431649117177",
  "10829154948357654897792444316512827659620136273388886760324770466776134105520",
  "1497911744463986566314308077983046202449361313910668647770797503379177516252",
  "12593805385728178657844996215584371401133999503150901444097670307277076679963",
  "10850392992008761830625471778404650447428083833210258292805429019728339148884",
  "14543198914351408332605170668434073965733065998306090232470378382586261585673",
  "8970577293318759332000829758497026170274182981692659182316902898358499339366",
  "11284416148363637750890333032032341746344002169122937977913559896732796917351",
  "19073326575738477950611876380881549245056260918507320247558486699216090444354",
];

const vkStruct = {
  alpha1: { X: vk[0], Y: vk[1] },
  beta2: {
    X: [vk[2], vk[3]],
    Y: [vk[4], vk[5]],
  },
  gamma2: {
    X: [vk[6], vk[7]],
    Y: [vk[8], vk[9]],
  },
  delta2: {
    X: [vk[10], vk[11]],
    Y: [vk[12], vk[13]],
  },
  public_input: Array.from({ length: 2 }, (_, i) => ({
    X: vk[14 + i * 2],
    Y: vk[15 + i * 2],
  })),
};

const proof = [
  "1230979502786856064087028470365274864448359633390630983862150890154364448629",
  "1963946534804814002839004842150823344977607863641209052355670291925435265588",
  "14676821133665353669936091540077467094374036997736514686759275207858283483678",
  "12023420153416018269731030224991440993978493137234605772951122187844525844211",
  "3841172387777359889962166092892945458601355146301266608319874062655668890330",
  "7277108494451364864006916882423558051866616835250721340931534446326305528716",
  "11054406870719071958757411166125177150055771592551961748136542639602667150864",
  "8719482636839617753617519598356022451529952057778228723367184947988616826007",
];

const verify_inputs = ["2006"];

describe("SNARK", function () {
  let groth;
  beforeEach(async function () {
    // 1. 테스트에 사용할 계정 가져오기
    const [owner] = await hre.ethers.getSigners();

    // 2. 컨트랙트 팩토리(Factory) 가져오기
    const grothFactory = await hre.ethers.getContractFactory(
      "Groth16VerifyBn254"
    );

    // 3. 컨트랙트 배포
    groth = await grothFactory.deploy();
  });

  it("Verifies a proof", async () => {
    await groth.verifyProof(proof, verify_inputs, vkStruct);
    expect(true).to.equal(await groth.pairingResult());
  });
});
